{"version":3,"sources":["containers/Start/RouteHandle/index.js","js/constants/action-types.js","containers/GetName/index.js","js/actions/index.js","components/Player/index.js","components/SpaceStation/index.js","components/Grid/index.js","containers/GameStage/index.js","containers/MainGame/index.js","containers/routes.js","containers/Start/index.js","App.js","serviceWorker.js","js/reducers/index.js","js/store/index.js","index.js"],"names":["RouteHandle","routes","this","props","Object","keys","map","item","i","disabled","key","exact","path","component","Component","ADD_PLAYERNAME","ADD_WEBSOCKET","GetName","state","playerName","socket","webSocket","tempPlayerName","setPlayerName","bind","changeTempPlayerName","readyForRedirect","findCookieCallSign","onopen","setInterval","send","JSON","stringify","command","onmessage","event","console","log","target","value","setState","Cookies","set","expires","addPlayername","undefined","get","callsign","to","className","InputGroup","Input","onChange","placeholder","InputGroupAddon","addonType","Button","onClick","connect","dispatch","type","payload","addWebSocket","Player","image","x","y","scale","SpaceStation","Grid","xMove","yMove","gameWidth","gameHeight","playerLocation","modalOpen","handleKeyPress","moveX","moveY","window","addEventListener","code","direction","newLocation","width","height","options","backgroundColor","GameStage","parentDivDimensions","MainGame","isPlayernameSet","renderGameStage","GameDiv","React","createRef","current","offsetWidth","offsetHeight","ref","ROUTES","Start","App","Boolean","location","hostname","match","initialState","WebSocket","rootReducer","action","assign","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8f277d54.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Route } from 'react-router-dom'\n\nclass RouteHandle extends Component {\n  render() {\n    const { routes } = this.props;\n    const items = Object.keys(routes);\n    return items.map((item, i) => {\n      if (!routes[item].disabled) {\n        return (\n          <Route\n            key={i}\n            exact\n            path={routes[item].path}\n            component={routes[item].component}\n          />\n        )\n      } else {\n        return null\n      }\n    })\n  }\n}\n\nexport default RouteHandle;\n","export const ADD_PLAYERNAME = \"ADD_PLAYERNAME\"\nexport const ADD_WEBSOCKET = \"ADD_WEBSOCKET\"\n","import React, { Component } from \"react\";\nimport { InputGroup, InputGroupAddon, Button, Input } from \"reactstrap\";\nimport \"./styles.css\";\nimport { connect } from \"react-redux\";\nimport { addPlayername, addWebSocket } from \"../../js/actions/index\";\nimport { Redirect } from 'react-router-dom'\nimport Cookies from 'js-cookie'\n\nfunction mapDispatch(dispatch) {\n  return {\n    addPlayername: playerName => dispatch(addPlayername(playerName)),\n    addWebSocket: webSocket => dispatch(addWebSocket(webSocket))\n  };\n}\n\nconst mapStateToProps = state => {\n  return { webSocket: state.webSocket };\n}\n\nclass GetName extends Component {\n  constructor(props) {\n        super(props);\n        this.state = {\n          playerName: -1,\n          socket: this.props.webSocket\n        }\n\n        // this.setState({}, () => {\n        //   this.props.addWebSocket(this.state.socket)\n        // })\n\n        this.tempPlayerName = \"\"\n\n        this.setPlayerName = this.setPlayerName.bind(this)\n        this.changeTempPlayerName = this.changeTempPlayerName.bind(this)\n        this.readyForRedirect = this.readyForRedirect.bind(this)\n        this.findCookieCallSign = this.findCookieCallSign.bind(this)\n  }\n\n  componentDidMount() {\n    this.state.socket.onopen = () => {\n      setInterval(() => {\n        this.state.socket.send(\n          JSON.stringify({\n            command: \"ping\"\n          })\n        )\n      }, 30000)\n    }\n    this.state.socket.onmessage = (event) => {\n      console.log(event)\n    }\n  }\n\n  changeTempPlayerName(event) {\n    this.tempPlayerName = event.target.value\n  }\n  setPlayerName() {\n    if (this.tempPlayerName !== \"\") {\n      this.setState({playerName: this.tempPlayerName}, () => {\n        const playerName = this.tempPlayerName\n        Cookies.set('callsign', playerName, { expires: 5 })\n        this.props.addPlayername(playerName)\n      })\n    }\n  }\n  findCookieCallSign() {\n    if (Cookies.get('callsign') !== undefined) {\n      this.setState({playerName: this.tempPlayerName}, () => {\n        const playerName = Cookies.get('callsign')\n        this.props.addPlayername(playerName)\n        this.state.socket.onopen = () => {\n          console.log(\"Test\")\n          this.state.socket.send(\n            JSON.stringify({\n              command: \"setCallsign\",\n              callsign: playerName\n            })\n          )\n        }\n      })\n    }\n  }\n\n  readyForRedirect() {\n    if (this.state.playerName !== -1) {\n      return <Redirect to=\"/game\" />\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"get-name-background\">\n        {this.findCookieCallSign()}\n        {this.readyForRedirect()}\n        <div className=\"username-card\">\n          <h1>Trade Wars!</h1>\n          <InputGroup>\n            <Input onChange={this.changeTempPlayerName} placeholder=\"Username\" />\n            <InputGroupAddon addonType=\"append\">\n              <Button onClick={this.setPlayerName}>Play</Button>\n            </InputGroupAddon>\n          </InputGroup>\n        </div>\n      </div>\n    );\n  }\n}\n\n\n\nexport default connect(mapStateToProps, mapDispatch)(GetName)\n","import { ADD_PLAYERNAME, ADD_WEBSOCKET } from '../constants/action-types'\n\nexport function addPlayername(payload) {\n  return { type: ADD_PLAYERNAME, payload }\n};\nexport function addWebSocket(payload) {\n  return { type: ADD_WEBSOCKET, payload }\n}\n","import { Sprite } from '@inlet/react-pixi';\nimport React, { Component } from \"react\";\n\nclass Player extends Component {\n  render() {\n    return (\n      <Sprite\n        image=\"https://cdn1.iconfinder.com/data/icons/space-133/64/spaceship-planet-space-colony-city-512.png\"\n        x={this.props.x}\n        y={this.props.y}\n        scale={{ x: 0.05, y: 0.05}}\n      />\n    );\n  }\n}\n\nexport default Player\n","import { Sprite } from '@inlet/react-pixi';\nimport React, { Component } from \"react\";\n\nclass SpaceStation extends Component {\n  render() {\n    return (\n      <Sprite\n        image=\"https://www.gfxmag.com/wp-content/uploads/2017/01/satellite-emoji-vector-icon-1.png\"\n        x={this.props.x}\n        y={this.props.y}\n        scale={{ x: 0.5, y: 0.5}}\n      />\n    );\n  }\n}\n\nexport default SpaceStation\n","import { Graphics, Stage } from '@inlet/react-pixi';\nimport React, { Component } from \"react\";\nimport Player from '../Player'\nimport SpaceStation from '../SpaceStation'\nimport { Modal, ModalBody, ModalFooter, Button, ModalHeader } from 'reactstrap'\n\nclass Grid extends Component {\n  constructor(props) {\n    super(props);\n\n    this.xMove = 0\n    this.yMove = 0\n\n    this.state = {\n      gameWidth: this.props.gameWidth,\n      gameHeight: this.props.gameHeight,\n      playerLocation: {\n        x: 0,\n        y: 0\n      },\n      modalOpen: true\n    }\n\n    this.handleKeyPress = this.handleKeyPress.bind(this)\n    this.moveX = this.moveX.bind(this)\n    this.moveY = this.moveY.bind(this)\n  }\n\n  componentDidMount() {\n    this.setState({\n      gameWidth: this.state.gameWidth - (this.state.gameWidth * 0.012),\n      gameHeight: this.state.gameHeight - (this.state.gameHeight * 0.015)\n    }, () => {\n      this.xMove = this.state.gameWidth/20\n      this.yMove = this.state.gameHeight/20\n      this.setState({\n        playerLocation: {\n          x: this.xMove,\n          y: this.yMove - (this.yMove/2)\n        }\n      })\n    })\n    window.addEventListener(\"keydown\", this.handleKeyPress)\n  }\n\n  handleKeyPress(event) {\n    switch (event.code) {\n      case \"ArrowUp\":\n        this.moveY(-1 * this.yMove)\n        break\n      case \"ArrowDown\":\n        this.moveY(this.yMove)\n        break\n      case \"ArrowLeft\":\n        this.moveX(-1 * this.xMove)\n        break\n      case \"ArrowRight\":\n        this.moveX(this.xMove)\n        break\n      default:\n        break\n    }\n  }\n  moveY(direction) {\n    var newLocation = {\n      y: this.state.playerLocation.y + direction,\n      x: this.state.playerLocation.x\n    }\n    if (newLocation.y >= 0 && newLocation.y <= this.state.gameHeight) {\n      this.setState({\n        playerLocation: {\n          x: newLocation.x,\n          y: newLocation.y\n        }\n      })\n    }\n  }\n  moveX(direction) {\n    var newLocation = {\n      y: this.state.playerLocation.y,\n      x: this.state.playerLocation.x + direction\n    }\n    if (newLocation.x + direction >= 0 && newLocation.x <= this.state.gameWidth) {\n      this.setState({\n        playerLocation: {\n          x: newLocation.x,\n          y: newLocation.y\n        }\n      })\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Stage width={this.state.gameWidth} height={this.state.gameHeight} options={{ backgroundColor: 0x1d2230 }}>\n          <Graphics\n            x={0}\n            y={0}\n          />\n          <SpaceStation x={100} y={100} />\n          <Player x={this.state.playerLocation.x} y={this.state.playerLocation.y} />\n        </Stage>\n      </div>\n    );\n  }\n}\n\nexport default Grid\n\n\n// Put this in a Grapics Component to have interaction\n// interactive={true}\n// pointerdown={(event) => {this.updatePlayerLocation(event)}}\n// draw={g => {\n//   g.beginFill(0x1d2230);\n//   g.drawRect(0, 0, this.state.gameWidth, this.state.gameHeight);\n//   g.endFill();\n// }}\n","import React, { Component } from \"react\";\nimport Grid from '../../components/Grid'\n\nclass GameStage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = this.props.parentDivDimensions\n  }\n\n  componentDidMount() {\n    this.setState({\n      gameWidth: this.state.gameWidth - (this.state.gameWidth * 0.012),\n      gameHeight: this.state.gameHeight - (this.state.gameHeight * 0.015)\n    })\n  }\n\n  render() {\n    return (\n      <Grid gameWidth={this.state.gameWidth} gameHeight={this.state.gameHeight} />\n    );\n  }\n}\n\nexport default GameStage\n","import React, { Component } from \"react\";\nimport \"./styles.css\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from 'react-router-dom'\nimport GameStage from '../GameStage'\n\nconst mapStateToProps = state => {\n  return { playerName: state.playerName };\n}\n\nclass MainGame extends Component {\n  constructor(props) {\n        super(props);\n\n        this.state = {\n          gameWidth: -1,\n          gameHeight: -1\n        }\n\n        this.isPlayernameSet = this.isPlayernameSet.bind(this)\n        this.renderGameStage = this.renderGameStage.bind(this)\n        this.GameDiv = React.createRef()\n\n  }\n\n  isPlayernameSet() {\n    if (this.props.playerName === -1) {\n      return <Redirect to=\"/\" />\n    }\n  }\n\n  componentDidMount () {\n    this.setState({\n      gameWidth: this.GameDiv.current.offsetWidth,\n      gameHeight: this.GameDiv.current.offsetHeight\n    })\n\n  }\n\n  renderGameStage() {\n    if (this.state.gameWidth !== -1 && this.state.gameHeight !== -1) {\n      return <GameStage parentDivDimensions={this.state} />\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"game-background\">\n        {this.isPlayernameSet()}\n        <h1 className=\"game-title\">Welcome <u><b>{this.props.playerName}</b></u> to Trade Wars</h1>\n        <div className=\"game-window-container\">\n          <div ref={this.GameDiv} className=\"render-container\">\n            {this.renderGameStage()}\n          </div>\n          <div className=\"game-status-container\">\n            <div className=\"game-cargo-container\">\n              <p className=\"game-status-title\">Cargo</p>\n            </div>\n            <div className=\"game-status-text-container\">\n              <p className=\"game-status-title\">Messages</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nMainGame = connect(mapStateToProps)(MainGame)\nexport default MainGame\n","/*\n  {Name of Route}: {\n    path: {the path you want the navigation to go to as a string},\n    component: {the assigned identifier of the imported component from bellow},\n    disabled: {if you want the element to be unclickable put the boolean value true, and null/fasle/don't include for clickable}\n  }\n*/\nimport GetName from './GetName'\nimport MainGame from './MainGame'\n\nconst ROUTES = {\n  GetName: {\n    path: \"/\",\n    component: GetName,\n    disabled: false,\n  },\n  MainGame: {\n    path: \"/game\",\n    component: MainGame,\n    disabled: false,\n  }\n}\n\nexport default ROUTES\n","import React, { Component } from 'react';\nimport { HashRouter as Router } from 'react-router-dom'\nimport RouteHandle from './RouteHandle'\nimport ROUTES from '../routes.js'\n\nclass Start extends Component {\n  render() {\n    return (\n      <Router>\n        <RouteHandle routes={ROUTES}/>\n      </Router>\n    )\n  }\n}\n\nexport default Start;\n","import React from 'react';\nimport './App.css';\nimport Start from './containers/Start'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <main>\n        <Start/>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { ADD_PLAYERNAME, ADD_WEBSOCKET } from '../constants/action-types'\n\nconst initialState = {\n  playerName: -1,\n  webSocket: new WebSocket('ws://trade-wars-backend.herokuapp.com/gameServer')\n}\n\nfunction rootReducer(state = initialState, action) {\n  switch (action.type) {\n    case ADD_PLAYERNAME:\n      return Object.assign({}, state, {\n        playerName: state.playerName = action.payload\n      })\n    case ADD_WEBSOCKET:\n      return Object.assign({}, state, {\n        webSocket: state.webSocket = action.payload\n      })\n    default:\n      break\n  }\n  return state\n}\n\nexport default rootReducer\n","import { createStore } from 'redux'\nimport rootReducer from '../reducers/index'\n\nconst store = createStore(rootReducer)\n\nexport default store\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux'\nimport store from './js/store'\n\nReactDOM.render((\n  <Provider store={store}>\n    <App />\n  </Provider>\n), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}